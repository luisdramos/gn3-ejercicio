@{
    ViewBag.Title = "Sueldos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="app-sueldos" class="container mt-4">
    <h2>@ViewBag.Title</h2>

    <!-- Mensajes de estado -->
    <div v-if="loading" class="alert alert-info">
        <i class="fas fa-spinner fa-spin"></i> Cargando Sueldos...
    </div>

    <div v-if="error" class="alert alert-danger">
        {{ error }}
    </div>

    <!-- Tabla de resultados -->
    <div v-if="sueldos.length > 0">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Clave Empleados</th>
                    <th>Sueldo Mensual</th>
                    <th>Forma de Pago</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="sueldo in sueldos" :key="sueldo.claveEmpleado">
                    <td>{{ sueldo.ClaveEmpleado }}</td>
                    <td>{{ sueldo.SueldoMensual }}</td>
                    <td>{{ sueldo.FormaPago }}</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div v-else-if="!loading" class="alert alert-warning">
        No se encontraron sueldos.
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>

    <script>

        const apiUrl = '@Url.Content("~/api/GetSueldosAPI")';

        new Vue({
            el: '#app-sueldos',
            data: {
                sueldos: [],
                loading: true,
                error: null
            },
            mounted() {
                this.cargarSueldos();
            },
            methods: {
                async cargarSueldos() {
                    try {
                        this.loading = true;
                        this.error = null;

                        const response = await fetch(apiUrl, {
                            headers: {
                                'Accept': 'application/json'
                            }
                        });

                        if (!response.ok) {
                            throw new Error(`Error ${response.status}: ${response.statusText}`);
                        }

                        const data = await response.json();
                        this.sueldos = data;
                    } catch (err) {
                        console.error('Error al cargar sueldos:', err);
                        this.error = `Error al obtener los sueldos: ${err.message}`;
                    } finally {
                        this.loading = false;
                    }
                }
            }
        });
    </script>
}

<div id="formularioSueldo">
    <h2>Formulario Sueldo</h2>
    <form>
        <div class="mb-3">
            <label for="clave" class="form-label">Clave Empleado</label>
            <input type="number" id="clave" v-model="form.ClaveEmpleado" class="form-control" min="0" max="1000" required>
        </div>

        <div class="mb-3">
            <label for="sueldoMensual" class="form-label">Sueldo Mensual</label>
            <input type="text" id="sueldoMensual" v-model="form.SueldoMensual" class="form-control" required>
        </div>

        <div class="mb-3">
            <label for="formaPago" class="form-label">Forma de Pago</label>
            <select id="formaPago" v-model="form.FormaPago" class="form-select" required>
                <option value="" disabled selected>Seleccione una opción</option>
                <option value="Efectivo">Efectivo</option>                
                <option value="Transferencia">Transferencia</option>
            </select>
        </div>

        <button type="button" class="btn btn-primary" v-on:click="save">Agregar/Actualizar</button>
        <button type="button" class="btn btn-danger" v-on:click="deleted">Eliminar</button>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
<script>
    new Vue({
        el: '#formularioSueldo',
        data: {
            form: {
                ClaveEmpleado: '',
                SueldoMensual: '',
                FormaPago: ''
            }
        },
        methods: {
            async save() {
                if (this.form.ClaveEmpleado != '' || this.form.SueldoMensual != '' || this.form.FormaPago != '') {
                    fetch('/api/SetSueldoAPI', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(this.form)
                    }).then(response => {
                        if (response.ok) {
                            alert('Sueldo guardado correctamente');                            
                            window.location.reload();
                        } else {
                            alert('Error al guardar');
                        }
                    }).catch(error => { console.error('Error en la solicitud:', error); });
                } else { alert('Faltan datos por capturar'); }

            }, test() {
                console.log('Test function called');
            }, async deleted() {
                if (this.form.ClaveEmpleado != '') {
                    fetch('/api/DeleteSueldoAPI', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(this.form)
                    }).then(response => {
                        if (response.ok) {
                            alert('Sueldo eliminado correctamente');                            
                            window.location.reload();
                        } else {
                            alert('Error al guardar');
                        }
                    }).catch(error => { console.error('Error en la solicitud:', error); });
                } else { alert('Faltan datos por capturar'); }

            }
        }
    });
</script>